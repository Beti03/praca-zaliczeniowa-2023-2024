import pytest
import re
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC


class SC_02_S_Product_Search_By_Color:
    """
    SC_02_S_Product_Search_By_Color:
    CEL:Sprawdzenie czy funkcjonalnosć wyszukiwania produktu/ów po kolorze w "Shopping Options", działa zgodnie z założeniem.
    ZAŁOŻENIE:
    Po wybraniu koloru na stronie produktów zostaną zwrócone produkty, które w opisie mają wybrany kolor.
    """

    # def test_SC_02_S_TC_01_product_search_by_red_color(self):
    #     """
    #     CEL: Sprwadzenie czy zostanie zwrócony produkt/y który posiada w opisie kolor czerwony
    #     WARUNKI WSTĘPNE:
    #     1. Strona ustawiona na https://magento.softwaretestingboard.com/women/bottoms-women/pants-women.html
    #     2. Opcja "Pokaż" ustawiona na wartość = 24
    #     KROKI:
    #     1. Znajdź nagłówek o nazwie " Color" i kliknij w napis
    #     2. Kliknij w pole w kolorze czerwonym
    #     3. Poczekaj jak strona się przeładuje
    #     4. Zlicz ilość zwróconych produktów
    #     5. Sprawdź czy na zwróconych produktach w opisie jest kolor czerwony
    #     REZULTAT:
    #     1. Oczekiwana liczba zwróconych produktów to 4
    #     2. Na karcie zwróconych produktów będzie atrybut z wartością "Red"
    #     :return:
    #     """
    #     pass

    @pytest.mark.usefixtures("set_side_for_cups")
    def test_SC_02_S_TC_02_product_search_by_capacity(self):
        """
        SC_02_S_Product_Search_By_Color:
        TODO: Uzupełnić
        :return:
        """
        find_elements = self.driver.find_elements(By.XPATH, "//dl[@id='narrow-by-list']/dd[@class='last even']/ol/li")
        lista_pozyzyji = []
        for i in range(len(find_elements)):
            lista_pozyzyji.append(re.sub(r"\s*\(\d+\)", "", str(find_elements[i].text)))
        licznik = 0
        for i in range(len(lista_pozyzyji)):
            if lista_pozyzyji[i] != '130 ml':
                licznik += 1
            else:
                blue_color_link = self.driver.find_element(By.XPATH, "//dl[@id='narrow-by-list']/dd[@class='last even']/ol/li[{}]".format(licznik))
                self.driver.implicitly_wait(10)
                blue_color_link.click()
                WebDriverWait(self.driver, 150).until(
                    EC.visibility_of_element_located((By.XPATH, "//div[@class='category-products']/ul/li"))
                )
                self.driver.implicitly_wait(50)
                products_find = self.driver.find_elements(By.XPATH, "//div[@class='category-products']/ul/li")
                vissible_products = [item for item in products_find if item.is_displayed()]
                product_item_count = len(vissible_products)
                assert product_item_count == 1